import pandas as pd
CAhousing_df=pd.read_csv(r'C:\Users\morva\Documents\Python Scripts\Github Housing\California Housing.csv')

CAhousing_df.columns
#Index(['longitude', 'latitude', 'housing_median_age', 'total_rooms', 'total_bedrooms', 'population', 'households', 'median_income',
       'median_house_value', 'ocean_proximity'],  dtype='object')
   
CAhousing_df.describe()
#
longitude	latitude	housing_median_age	total_rooms	total_bedrooms	population	households	median_income	median_house_value
count	20640.000000	20640.000000	20640.000000	20640.000000	20433.000000	20640.000000	20640.000000	20640.000000	20640.000000
mean	-119.569704	35.631861	28.639486	2635.763081	537.870553	1425.476744	499.539680	3.870671	206855.816909
std	2.003532	2.135952	12.585558	2181.615252	421.385070	1132.462122	382.329753	1.899822	115395.615874
min	-124.350000	32.540000	1.000000	2.000000	1.000000	3.000000	1.000000	0.499900	14999.000000
25%	-121.800000	33.930000	18.000000	1447.750000	296.000000	787.000000	280.000000	2.563400	119600.000000
50%	-118.490000	34.260000	29.000000	2127.000000	435.000000	1166.000000	409.000000	3.534800	179700.000000
75%	-118.010000	37.710000	37.000000	3148.000000	647.000000	1725.000000	605.000000	4.743250	264725.000000
max	-114.310000	41.950000	52.000000	39320.000000	6445.000000	35682.000000	6082.000000	15.000100	500001.000000


CAhousing_df.loc[0:3]
#ongitude	latitude	housing_median_age	total_rooms	total_bedrooms	population	households	median_income	median_house_value	ocean_proximity
0	-122.23	37.88	41.0	880.0	129.0	322.0	126.0	8.3252	452600.0	NEAR BAY
1	-122.22	37.86	21.0	7099.0	1106.0	2401.0	1138.0	8.3014	358500.0	NEAR BAY
2	-122.24	37.85	52.0	1467.0	190.0	496.0	177.0	7.2574	352100.0	NEAR BAY
3	-122.25	37.85	52.0	1274.0	235.0	558.0	219.0	5.6431	341300.0	NEAR BAY


import numpy as np
from sklearn.model_selection import train_test_split
from sklearn.metrics import r2_score
from sklearn.linear_model import LinearRegression

CAhousing_df.ocean_proximity=CAhousing_df.ocean_proximity.astype('category')
#Convert ocean_proximity into a categorical variable

CAhousing_df.ocean_proximity.cat.categories
#Index(['<1H OCEAN', 'INLAND', 'ISLAND', 'NEAR BAY', 'NEAR OCEAN'], dtype='object')

CAhousing_df=pd.get_dummies(CAhousing_df,prefix_sep='_',drop_first=True)
CAhousing_df.head(5)

ReducedCAhousing_df=CAhousing_df.dropna()

normalized_df=(ReducedCAhousing_df-ReducedCAhousing_df.mean())/ReducedCAhousing_df.std()
scaler=StandardScaler()
normalized_df=pd.DataFrame(scaler.fit_transform(ReducedCAhousing_df),index=ReducedCAhousing_df.index,columns=ReducedCAhousing_df.columns)
normalized_df=(ReducedCAhousing_df-ReducedCAhousing_df.min())/(ReducedCAhousing_df.max()-ReducedCAhousing_df.min())
normalized_df

excludecolumns=('median_house_value')

predictors=[s for s in ReducedCAhousing_df.columns if s not in excludecolumns]
predictors
#['longitude',
 'latitude',
 'housing_median_age',
 'total_rooms',
 'total_bedrooms',
 'population',
 'households',
 'median_income',
 'ocean_proximity_INLAND',
 'ocean_proximity_ISLAND',
 'ocean_proximity_NEAR BAY',
 'ocean_proximity_NEAR OCEAN']
 
 outcome='median_house_value'
 x=ReducedCAhousing_df[predictors]
y=ReducedCAhousing_df[outcome]
train_x,valid_x,train_y,valid_y=train_test_split(x,y,test_size=.4,random_state=1)
model=LinearRegression()
model.fit(train_x,train_y)
#LinearRegression(copy_X=True, fit_intercept=True, n_jobs=None, normalize=False)

train_prediction=model.predict(train_x)
train_results=pd.DataFrame({'median_house_value':train_y,'predicted':train_prediction,'residuals':train_y-train_prediction})
train_results.head()
#median_house_value	predicted	residuals
16766	264300.0	241999.814590	22300.185410
1983	155900.0	105751.000497	50148.999503
8316	300000.0	368399.016944	-68399.016944
4075	500001.0	417978.854566	82022.145434
16407	130400.0	143488.801597	-13088.801597

valid_prediction=model.predict(valid_x)
valid_results=pd.DataFrame({'median_house_value':valid_y,'predicted':valid_prediction,'residuals':valid_y-valid_prediction})
valid_results.head()
#median_house_value	predicted	residuals
6715	360900.0	381575.901392	-20675.901392
4121	291500.0	280442.284083	11057.715917
15433	131300.0	156189.944973	-24889.944973
20272	500001.0	355450.644766	144550.355234
11843	118800.0	56148.758536	62651.241464

from dmba import regressionSummary
regressionSummary(train_results.median_house_value, train_results.predicted)
#regressionSummary(train_results.median_house_value, train_results.predicted)

regressionSummary(valid_results.median_house_value, valid_results.predicted)
#Regression statistics

                      Mean Error (ME) : 935.4942
       Root Mean Squared Error (RMSE) : 68932.5443
            Mean Absolute Error (MAE) : 49831.2047
          Mean Percentage Error (MPE) : -9.8600
Mean Absolute Percentage Error (MAPE) : 28.4619




